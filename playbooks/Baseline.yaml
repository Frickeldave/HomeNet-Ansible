---
- name: Baseline
  hosts: all
  become: true
  gather_facts: true
  vars:
    ansible_target_environment: prd

  tasks:

    - name: "Import account variables for {{ansible_target_environment}} environment"
      include_vars:
        file: "./../hosts/global_vars/{{ansible_target_environment}}/{{ansible_target_environment}}_all_enc.yaml"

    - name: Install whois to get mkpasswd tool (needed by role standard-user)
      apt:
        name: whois

    - name: Install unzip binary
      apt:
        name: unzip

    - name: Install fontconfig binary
      apt:
        name: fontconfig

    - name: Install and configure oh-my-posh
      include_role:
        name: app-ohmyposh

    - name: Configure vi systemwide
      include_role:
        name: cfg-vi

    - name: Create standard groups if needed
      include_role:
        name: cfg-standardgroups

    - name: Configure ansible
      include_role:
        name: cfg-ansibleuser

    - name: Configure SSH
      include_role:
        name: cfg-ssh

    - name: Mount device
      include_role:
        name: cfg-mountdev
      vars:
        mountdev_path: "/mnt/usbstick_a"
        mountdev_uuid: "f63c6974-c4a7-4629-a9ee-3a470e1b7630"
  
    - name: Create home directory on mount point
      file:
        path: "/mnt/usbstick_a/home"
        state: directory

    - name: Create local users
      include_role:
        name: cfg-manageusers
      vars:
        manageusers_username: "{{item.username}}"
        manageusers_password: "{{item.password}}"
        manageusers_user_home: "{{item.home_dir}}"
        manageusers_make_sudo: "{{item.make_sudo}}"
        manageusers_make_sudo_passwordless: "{{item.make_sudo_passwordless}}"
        manageusers_user_id: "{{item.userid|int}}"
        manageusers_ssh_public_key: "{{item.ssh_public_key}}"
        manageusers_hostname_match: "{{item.hostname_match}}"
      when: accounts is defined and item.hostname_match is defined and (item.hostname_match == "*" or inventory_hostname in item.hostname_match)
      loop: "{{ accounts }}"
      no_log: true #Supress output. When task is not done (because of "when"-clause) it shows the whole content of the file.